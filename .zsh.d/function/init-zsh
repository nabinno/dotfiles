#!/usr/bin/env zsh
echo
echo '========'
echo 'init-zsh'
echo '========'

autoload colors
colors
case ${UID} in
  0)
    PROMPT="%B%{${fg[red]}%}%/#%{${reset_color}%}%b "
    PROMPT2="%B%{${fg[red]}%}%_#%{${reset_color}%}%b "
    SPROMPT="%B%{${fg[red]}%}%r is correct? [n,y,a,e]:%{${reset_color}%}%b "
    [ -n "${REMOTEHOST}${SSH_CONNECTION}" ] &&
      PROMPT="%{${fg[cyan]}%}$(echo ${HOST%%.*} | tr '[a-z]' '[A-Z]') ${PROMPT}"
    ;;
  *)
    PROMPT="%{${fg[red]}%}%/%%%{${reset_color}%} "
    PROMPT2="%{${fg[red]}%}%_%%%{${reset_color}%} "
    SPROMPT="%{${fg[red]}%}%r is correct? [n,y,a,e]:%{${reset_color}%} "
    [ -n "${REMOTEHOST}${SSH_CONNECTION}" ] &&
      PROMPT="%{${fg[cyan]}%}$(echo ${HOST%%.*} | tr '[a-z]' '[A-Z]') ${PROMPT}"
    ;;
esac
setopt auto_cd           # auto change directory
setopt auto_pushd        # auto directory pushd that you can get dirs list by cd -[tab]
setopt correct           # command correct edition before each completion attempt
setopt list_packed       # compacked complete list display
setopt noautoremoveslash # no remove postfix slash of command line
setopt nolistbeep        # no beep sound when complete list displayed

# ----------------------------------------------------------------------
# Keybind
# ### emacs like keybind (e.x. Ctrl-a goes to head of a line and Ctrl-e goes to end of it) ###
bindkey -e
setopt rm_star_silent
setopt extended_glob

# ### historical backward/forward search with linehead string binded to ^P/^N ###
autoload history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end
bindkey "^p" history-beginning-search-backward-end
bindkey "^n" history-beginning-search-forward-end
bindkey "\\ep" history-beginning-search-backward-end
bindkey "\\en" history-beginning-search-forward-end

# ### Command history configuration ###
HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=10000
setopt hist_ignore_dups # ignore duplication command history list
setopt share_history    # share command history data

# ### Completion configuration ###
# fpath=(~/.zsh/functions/Completion ${fpath})
# autoload -U compinit
# compinit -u

# ### editor ###
# autoload zed

# ### zmv ###
autoload -Uz zmv

# ### prediction ###
# autoload predict-on
# predict-off

# ----------------------------------------------------------------------
# Terminal
unset LSCOLORS
unsetopt PROMPT_SP
zstyle ':completion:*' use-cache true
case "${TERM}" in
  xterm | screen.xterm*) export TERM=xterm-color ;;
  kterm)
    export TERM=kterm-color
    # set BackSpace control character
    stty erase
    ;;
  cons25)
    unset LANG
    export LSCOLORS=ExFxCxdxBxegedabagacad
    export LS_COLORS='di=01;34:ln=01;35:so=01;32:ex=01;31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30'
    zstyle ':completion:*' list-colors 'di=;34;1' 'ln=;35;1' 'so=;32;1' 'ex=31;1' 'bd=46;34' 'cd=43;34'
    ;;
  indumb | emacs)
    # PROMPT="%n@%~%(!.#.$)"
    PROMPT="%{${fg[red]}%}%/%%%{${reset_color}%} "
    PROMPT="%{${fg[cyan]}%}$(echo ${HOST%%.*} | tr '[a-z]' '[A-Z]') ${PROMPT}"
    RPROMPT=""
    unsetopt zle
    ;;
esac

# ### set terminal title including current directory ###
case "${TERM}" in
  kterm* | xterm*)
    function precmd() {
      echo -ne "\033]0;${USER}@${HOST%%.*}:${PWD}\007"
    }
    export LSCOLORS=gxfxcxdxbxegedabagacad
    export LS_COLORS='di=36;40:ln=35;40:so=32;40:pi=33;40:ex=31;40:bd=34;46:cd=34;43:su=0;41:sg=0;46:tw=0;42:ow=0;36:'
    zstyle ':completion:*' list-colors 'di=36' 'ln=35' 'so=32' 'ex=31' 'bd=46;34' 'cd=43;34'
    ;;
esac

# ----------------------------------------------------------------------
# Z
ZDOTDIR=~/.local

get-z() {
  git clone https://github.com/rupa/z $ZDOTDIR/z
  source $ZDOTDIR/.local/z/z.sh
}

set-z() {
  autoload -Uz is-at-least
  # Treat hook functions as array
  typeset -ga chpwd_functions
  typeset -ga precmd_functions
  typeset -ga preexec_functions
  # Simulate hook functions for older versions
  if ! is-at-least 4.2.7; then
    chpwd() {
      local f
      for f in $chpwd_functions; do $f; done
    }

    precmd() {
      local f
      for f in $precmd_functions; do $f; done
    }

    preexec() {
      local f
      for f in $preexec_functions; do $f; done
    }
  fi

  function load-if-exists() {
    test -e "$1" && source "$1"
  }

  # z - jump around {{{2
  # https://github.com/rupa/z
  _Z_CMD=z
  _Z_DATA=$ZDOTDIR/.z
  if is-at-least 4.3.9; then
    load-if-exists $ZDOTDIR/z/z.sh
  else
    _Z_NO_PROMPT_COMMAND=1
    load-if-exists $ZDOTDIR/z/z.sh && {
      precmd_z() {
        _z --add "$(pwd -P)"
      }
      precmd_functions+=precmd_z
    }
  fi
  test $? || unset _Z_CMD _Z_DATA _Z_NO_PROMPT_COMMAND
  #}}}

  unsetopt BG_NICE
}
if [ ! -f $ZDOTDIR/z/z.sh ]; then get-z; fi
if [ -f $ZDOTDIR/z/z.sh ]; then set-z; fi

get-autojump() {
  case $OSTYPE in
    linux*)
      case $DIST in
        Redhat | RedHat)
          git clone git://github.com/joelthelion/autojump.git
          cd ./autojump
          ./install.py
          cd -
          rm -fr ./autojump
          sudo cp ~/.autojump/site-functions/_j /usr/share/zsh/site-functions/
          ;;
      esac
      ;;
  esac
}

set-autojump() {
  case $OSTYPE in
    linux*)
      case $DIST in
        Redhat | RedHat) source /home/vagrant/.autojump/etc/profile.d/autojump.sh ;;
      esac
      ;;
  esac
}
# [[ ! -s /home/vagrant/.autojump/etc/profile.d/autojump.sh ]] && get-autojump
# [[   -s /home/vagrant/.autojump/etc/profile.d/autojump.sh ]] && set-autojump

# ----------------------------------------------------------------------
# Alias
zmodload -i zsh/mathfunc
setopt complete_aliases # aliased ls needs if file/dir completions work
# ### extentions ###
alias -s C=e
alias -s avi=svlc
alias -s bmp=display
alias -s bz2=bzcat
alias -s c=e
alias -s csv=ex
alias -s cpp=e
alias -s gif=display
alias -s gz=gzcat
alias -s h=e
alias -s html=w
alias -s java=e
alias -s jpeg=display
alias -s jpg=display
alias -s m4a=amarok
alias -s mp3=amarok
alias -s mp4v=svlc
alias -s mpeg=svlc
alias -s mpg=svlc
alias -s ogg=amarok
alias -s png=Fireworks
alias -s sh=e
alias -s tbz=bzcat
alias -s tgz=gzcat
alias -s txt=e
alias -s xhtml=w
alias -s xls=ex
alias -s xml=e
alias -s zip=zipinfo
# ### other aliases ###
alias today='date +%Y-%m-%d'
alias where="command -v"
case "${OSTYPE}" in
  freebsd* | darwin*)
    alias ls="ls -G -w"
    alias lf="\ls -p -l -F -G"
    alias ll="\ls -p -F -a -G"
    alias la="\ls -p -l -F -a -G"
    ;;
  linux* | cygwin | msys)
    alias ls='ls --color=auto'
    alias la="\ls -p -l -F -a --color=auto"
    alias lf="\ls -p -l -F --hide='.*' --color=auto"
    alias ll="\ls -p -F -a --color=auto"
    function lt() {
      \ls -R $1 | \grep ":$" | \sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e 's/^/   /' -e 's/-/|/'
    }
    ;;
esac
case "${OSTYPE}" in
  darwin*)
    alias updateports="sudo port selfupdate; sudo port outdated"
    alias portupgrade="sudo port upgrade installed"
    ;;
  freebsd*)
    case ${UID} in
      0)
        updateports() {
          if [ -f /usr/ports/.portsnap.INDEX ]; then
            portsnap fetch update
          else
            portsnap fetch extract update
          fi
          (
            cd /usr/ports/
            make index
          )
          portversion -v -l \<
        }
        alias appsupgrade='pkgdb -F && BATCH=YES NO_CHECKSUM=YES portupgrade -a'
        ;;
    esac
    ;;
esac
