#!/usr/bin/env zsh
echo
echo '[init-python]'
_start_time=$(date +"%s.%3N")

export REQUIRED_ANACONDA_VERSION=anaconda3-2023.09-0
export REQUIRED_PYTHON_VERSION=3.7.3

# ### version control ###
get-pyenv() {
  case "${OSTYPE}" in
    freebsd* | darwin* | linux*) anyenv install pyenv && exec -l zsh ;;
  esac
}

# ----------------------------------------------------------------------
# ### installation ###
get-python() {
  get-python-by-anyenv
}

get-python-by-asdf() {
  case "${OSTYPE}" in
    cygwin)
      apt-cyg install \
        python
      python-setuptools
      ;;
    freebsd* | darwin* | linux*)
      case $(asdf plugin-list) in *python*) ;; *) asdf plugin-add python ;; esac
      asdf install python $REQUIRED_ANACONDA_VERSION
      asdf global python $REQUIRED_ANACONDA_VERSION
      git clone https://github.com/yyuu/pyenv-virtualenv.git $PYENV_ROOT/plugins/pyenv-virtualenv
      ;;
  esac
}

get-python-by-anyenv() {
  case "${OSTYPE}" in
    cygwin)
      apt-cyg install \
        python
      python-setuptools
      ;;
    freebsd* | darwin* | linux*)
      if ! type pyenv >/dev/null; then get-pyenv; fi
      case $DIST in
        RedHat | Redhat | Debian)
          if ! type -p pyenv >/dev/null; then get-pyenv; fi
          pyenv install $REQUIRED_ANACONDA_VERSION
          git clone https://github.com/yyuu/pyenv-virtualenv.git $PYENV_ROOT/plugins/pyenv-virtualenv
          pyenv rehash
          pyenv global $REQUIRED_ANACONDA_VERSION
          ;;
        Ubuntu)
          case $DIST_VERSION in
            12.04 | 14.04 | 18.04 | 20.04 | 22.04 | 24.04)
              if ! type -p pyenv >/dev/null; then get-pyenv; fi
              pyenv install $REQUIRED_ANACONDA_VERSION
              git clone https://github.com/yyuu/pyenv-virtualenv.git $PYENV_ROOT/plugins/pyenv-virtualenv
              pyenv rehash
              pyenv global $REQUIRED_ANACONDA_VERSION
              ;;
            16.04)
              sudo apt install -y \
                python \
                python-setuptools
              ;;
            18.04 | 20.04 | 22.04 | 24.04)
              if ! type -p pyenv >/dev/null; then get-pyenv; fi
              pyenv install $REQUIRED_PYTHON_VERSION
              git clone https://github.com/yyuu/pyenv-virtualenv.git $PYENV_ROOT/plugins/pyenv-virtualenv
              pyenv rehash
              pyenv global $REQUIRED_PYTHON_VERSION
              ;;
          esac
          ;;
      esac
      ;;
  esac
}
if ! type -p pip >/dev/null; then get-python; fi

# ----------------------------------------------------------------------
# Pip
get-pip() {
  case "${OSTYPE}" in
    cygwin)
      if type -p easy_install-2.7 >/dev/null; then
        easy_install-2.7 https://pypi.python.org/packages/source/p/pip/pip-1.4.1.tar.gz
      elif type -p easy_install >/dev/null; then
        easy_install https://pypi.python.org/packages/source/p/pip/pip-1.4.1.tar.gz
      fi
      if type -p get-global-pip-packages >/dev/null; then get-global-pip-packages; fi
      ;;
    freebsd* | darwin* | linux*)
      if type -p easy_install >/dev/null; then easy_install pip; fi
      if type -p get-global-pip-packages >/dev/null; then get-global-pip-packages; fi
      ;;
  esac
}
if ! type -p pip >/dev/null; then get-pip; fi

get-global-pip-packages() {
  case "$OSTYPE" in
    freebsd* | darwin* | linux*)
      pip install -U \
        ipython \
        pulp \
        boto \
        pipenv \
        yamllint
      # ide
      pip install -U \
        jedi \
        epc \
        autopep8 \
        pyflakes
      # pydata
      pip install -U \
        numpy \
        scipy \
        pandas \
        matplotlib \
        scikit-image
      # machine_learning
      pip install -U \
        chainer \
        tensorflow \
        Theano \
        keras \
        scikit-learn
      # benchmark
      pip install -U \
        line_profiler \
        memory_profiler
      # other
      pip install -U \
        q
      ;;
  esac
}

get-keras-rl() {
  (
    pip install -U h5py
    cd ~
    git clone https://github.com/matthiasplappert/keras-rl
    cd keras-rl
    python setup.py install
  )
}

get-gym() {
  case $OSTYPE in
    linux*)
      case $DIST in
        Debian | Ubuntu)
          sudo apt-get install -y python-numpy python-dev cmake zlib1g-dev libjpeg-dev xvfb libav-tools xorg-dev python-opengl libboost-all-dev libsdl2-dev swig
          pip install -U gym
          ;;
      esac
      ;;
  esac
}
# if ! type -p gym > /dev/null ; then get-gym ; fi

get-poetry() {
  pip install --user poetry
}
if ! type -p poetry >/dev/null; then get-poetry; fi

# set-poetry() {
#   eval "$(poetry completions zsh)"
# }
# if type -p poetry >/dev/null; then set-poetry; fi


# ----------------------------------------------------------------------
# uv
get-uv() {
  curl -LsSf https://astral.sh/uv/install.sh | sh
}
if ! type -p uv >/dev/null; then get-uv; fi

_end_time=$(date +"%s.%3N")
echo time: $(echo "$_end_time - $_start_time" | bc) sec
