#!/usr/bin/env zsh
echo
echo '========'
echo 'init-git'
echo '========'

export REQUIRED_GIT_VERSION=2.11.0

# ----------------------------------------------------------------------
# ### installation ###
get-git() {
  case "${OSTYPE}" in
    freebsd* | darwin*) get-git-flow ;;
    linux*)
      case "${DIST}" in
        Redhat | RedHat)
          sudo yum groupinstall "Development Tools"
          sudo yum install gettext-devel openssl-devel perl-CPAN perl-devel zlib-devel
          wget https://www.kernel.org/pub/software/scm/git/git-${REQUIRED_GIT_VERSION}.tar.gz -O ./git-${REQUIRED_GIT_VERSION}.tar.gz
          wait
          tar zxvf git-${REQUIRED_GIT_VERSION}.tar.gz
          (
            cd git-${REQUIRED_GIT_VERSION}
            ./configure --prefix=/usr/local --with-curl --with-expat
            make prefix=/usr/local all
            sudo make prefix=/usr/local install
          )
          rm -fr git-${REQUIRED_GIT_VERSION} git-${REQUIRED_GIT_VERSION}.tar.gz
          get-git-flow
          ;;
        Debian) ;;
        Ubuntu)
          case "${DIST_VERSION=}" in
            12.04) sudo apt-get install -y python-software-properties ;;
            14.04) sudo apt-get install -y software-properties-common python3-software-properties ;;
          esac
          sudo add-apt-repository ppa:git-core/ppa
          sudo apt-get update -y
          sudo apt-get install -y git
          get-git-flow
          ;;
      esac
      git config --global push.default simple
      ;;
  esac
}

get-git-flow() {
  case "${OSTYPE}" in
    freebsd* | darwin*) port install git-flow ;;
    linux*)
      case "${DIST}" in
        Redhat | RedHat) sudo yum install -y gitflow ;;
        Debian | Ubuntu) sudo apt-get install -y git-flow ;;
      esac
      ;;
  esac
}
if ! type -p git >/dev/null; then
  get-git
else
  _REQUIRED_GIT_VERSION_NUM=$(echo $REQUIRED_GIT_VERSION | sed 's/\(.*\..*\)\..*/\1/')
  _CURRENT_GIT_VERSION=$(git --version 2>&1 | cut -d\  -f 3 | sed 's/\(.*\..*\)\..*/\1/')
  if [[ $_REQUIRED_GIT_VERSION_NUM > $_CURRENT_GIT_VERSION ]]; then get-git; fi
fi

# ----------------------------------------------------------------------
# ### hub ###
export REQUIRED_HUB_VERSION=2.2.8

get-hub() {
  case "${OSTYPE}" in
    freebsd*) ;;
    darwin*) brew install hub ;;
    linux*)
      case "${DIST}" in
        Redhat | RedHat)
          wget https://github.com/github/hub/releases/download/v${REQUIRED_HUB_VERSION}/hub-linux-amd64-${REQUIRED_HUB_VERSION}.tgz
          tar zxvf hub-linux-amd64-${REQUIRED_HUB_VERSION}.tgz
          mv hub-linux-amd64-${REQUIRED_HUB_VERSION}/bin/hub ~/.local/bin/
          rm -fr hub-linux-amd64-${REQUIRED_HUB_VERSION}*
          ;;
      esac
      ;;
  esac
}
if ! type -p hub >/dev/null; then get-hub; fi
if type -p hub >/dev/null; then eval "$(hub alias -s)"; fi

# ----------------------------------------------------------------------
# ### gibo ###
get-gibo() {
  case "${OSTYPE}" in
    freebsd*) ;;
    darwin* | linux*)
      brew install gibo
      ;;
  esac
}
if ! type -p gibo >/dev/null; then get-gibo; fi

# ----------------------------------------------------------------------
# ### bfg ###
get-bfg() {
  REQUIRED_BFG_VERSION=1.12.12
  case "${OSTYPE}" in
    freebsd* | darwin* | linux*)
      wget http://repo1.maven.org/maven2/com/madgag/bfg/${REQUIRED_BFG_VERSION}/bfg-${REQUIRED_BFG_VERSION}.jar -O ~/.local/bin/bfg.jar
      alias bfg='java -jar ~/.local/bin/bfg.jar'
      ;;
  esac
}
if [ ! -f ~/.local/bin/bfg.jar ]; then get-bfg; fi
if [ -f ~/.local/bin/bfg.jar ]; then alias bfg='java -jar ~/.local/bin/bfg.jar'; fi

_end_time=$(date +"%s.%3N")
echo time: $(echo "$_end_time - $_start_time" | bc) sec
