#!/usr/bin/env zsh
echo
echo '[init-llm]'
_start_time=$(date +"%s.%3N")

# ----------------------------------------------------------------------
# ### claude ###
# FOR USERS USING SCREEN ON UBUNTU, ADD THE FOLLOWING CODE TO /etc/sudoers:
# # Temporary workaround for Claude Code, which attempts to run
# # `sudo mkdir -p /run/screen` during startup or execution.
# # This prevents repeated password prompts.
# app ALL=(ALL) NOPASSWD: /usr/bin/mkdir -p /run/screen
export CLAUDE_CODE_DISABLE_NONESSENTIAL_TRAFFIC=1

get-claude() {
  case "${OSTYPE}" in
    freebsd* | darwin* | linux*)
      npm install -g @anthropic-ai/claude-code
      exec -l zsh
      ;;
  esac
}
if ! type -p claude >/dev/null; then get-claude; fi

set-claude-mcp-atlassian() {
  claude mcp add atlassian \
    --scope project \
    -- npx -y mcp-remote https://mcp.atlassian.com/v1/sse
}

set-claude-mcp-context7() {
  claude mcp add context7 \
    --scope project \
    -- npx -y mcp-remote https://mcp.context7.com/sse
}

set-claude-mcp-awsdocs() {
  claude mcp add awsdocs \
    --scope project \
    -e FASTMCP_LOG_LEVEL=ERROR \
    -e AWS_DOCUMENTATION_PARTITION=aws \
    -- uvx awslabs.aws-documentation-mcp-server@latest
}

set-claude-mcp-awsterraform() {
  claude mcp add awsdocs \
    --scope project \
    -e FASTMCP_LOG_LEVEL=ERROR \
    -- uvx awslabs.terraform-mcp-server@latest
}

set-claude-mcp-terraform() {
  claude mcp add terraform-mcp-server \
    --scope project \
    -- docker run -i --rm hashicorp/terraform-mcp-server
}

set-claude-mcp-serena() {
  claude mcp add serena \
    --scope project \
    -- uvx --from git+https://github.com/oraios/serena serena-mcp-server --context ide-assistant --project $(pwd)
}

set-claude-mcp-n8n() {
  claude mcp add n8n-mcp \
    --scope project \
    -e MCP_MODE=stdio \
    -e LOG_LEVEL=error \
    -e DISABLE_CONSOLE_OUTPUT=true \
    -e N8N_API_URL=${N8N_API_URL} \
    -e N8N_API_KEY=${N8N_API_KEY} \
    -- npx n8n-mcp
}

# set-claude-mcp-examplecom() {
#   claude mcp add examplecom \
#     --scope project \
#     -- npx -y sitemcp https://example.com -m "/examples/**"
# }

# ----------------------------------------------------------------------
# ### Gemini CLI ###
get-gemini() {
  case "${OSTYPE}" in
    freebsd* | darwin* | linux*)
      npm install -g @google/gemini-cli
      exec -l zsh
      ;;
  esac
}
if ! type -p gemini >/dev/null; then get-gemini; fi

# ----------------------------------------------------------------------
# ### Q CLI ###
get-qcli() {
  case "${OSTYPE}" in
    linux*)
      case "${DIST}" in
        Ubuntu)
          wget https://desktop-release.q.us-east-1.amazonaws.com/latest/amazon-q.deb
          sudo apt-get install -f
          sudo dpkg -i amazon-q.deb
          ;;
      esac
      ;;
  esac
}
if ! type -p q >/dev/null; then get-qcli; fi

_end_time=$(date +"%s.%3N")
echo time: $(echo "$_end_time - $_start_time" | bc) sec
