#!/usr/bin/env zsh

export REQUIRED_ERLANG_VERSION=25.1.2
export REQUIRED_REBAR_VERSION=3.9.0
export REQUIRED_ELIXIR_VERSION=1.14.2
export REQUIRED_PHOENIXFRAMEWORK_VERSION=1.3.4
export REQUIRED_FWUP_VERSION=1.3.1

# ### version control ###
get-kerl() {
  case "${OSTYPE}" in
    freebsd* | darwin* | linux*)
      curl https://raw.githubusercontent.com/yrashk/kerl/master/kerl -o ~/.local/bin/kerl
      chmod a+x ~/.local/bin/kerl
      echo 'KERL_CONFIGURE_OPTIONS="--disable-hipe --enable-smp-support --enable-threads --enable-kernel-poll"' >~/.kerlrc
      ;;
  esac
}

get-exenv() {
  case "${OSTYPE}" in
    freebsd* | darwin* | linux*)
      anyenv install exenv
      git clone git://github.com/mururu/elixir-build.git ~/.exenv/plugins/elixir-build
      exec -l zsh
      ;;
  esac
}

upgrade-elixir-build() {
  case "${OSTYPE}" in
    freebsd* | darwin* | linux*)
      rm -fr "$(exenv root)"/plugins/elixir-build
      git clone https://github.com/mururu/elixir-build.git "$(exenv root)"/plugins/elixir-build
      ;;
  esac
}

# ----------------------------------------------------------------------
# ### installation ###
get-erlang() {
  case "${OSTYPE}" in
    freebsd* | darwin* | linux*)
      case $(asdf plugin-list) in *erlang*) ;; *) asdf plugin-add erlang ;; esac
      asdf install erlang $REQUIRED_ERLANG_VERSION
      asdf global erlang $REQUIRED_ERLANG_VERSION
      ;;
  esac
}

get-erlang-by-kerl() {
  case "${OSTYPE}" in
    freebsd* | darwin* | linux*)
      mkdir -p ~/.local/otp
      rm -fr ~/.kerl/archives/otp_src_$REQUIRED_ERLANG_VERSION.tar.gz
      kerl build $REQUIRED_ERLANG_VERSION $REQUIRED_ERLANG_VERSION
      kerl install $REQUIRED_ERLANG_VERSION ~/.local/otp/$REQUIRED_ERLANG_VERSION
      source ~/.local/otp/$REQUIRED_ERLANG_VERSION/activate
      ;;
  esac
}
if ! type -p erl >/dev/null; then get-erlang; fi

get-rebar3() {
  case "${OSTYPE}" in
    freebsd* | darwin* | linux*)
      case $(asdf plugin-list) in *rebar*) ;; *) asdf plugin-add rebar ;; esac
      asdf install rebar $REQUIRED_REBAR_VERSION
      asdf global rebar $REQUIRED_REBAR_VERSION
      ;;
  esac
}

get-rebar3-by-wget() {
  case "${OSTYPE}" in
    freebsd* | darwin* | linux*)
      wget https://s3.amazonaws.com/rebar3/rebar3 -O ~/.local/bin/rebar3
      chmod +x ~/.local/bin/rebar3
      ;;
  esac
}
if ! type -p rebar3 >/dev/null; then get-rebar3; fi

get-elixir() {
  case "${OSTYPE}" in
    freebsd* | darwin* | linux*)
      case $(asdf plugin-list) in *elixir*) ;; *) asdf plugin-add elixir ;; esac
      asdf install elixir $REQUIRED_ELIXIR_VERSION
      asdf global elixir $REQUIRED_ELIXIR_VERSION
      get-global-mix-packages
      ;;
  esac
}

get-elixir-by-exenv() {
  case "${OSTYPE}" in
    freebsd* | darwin*)
      exenv install $REQUIRED_ELIXIR_VERSION
      exenv rehash
      exenv global $REQUIRED_ELIXIR_VERSION
      get-global-mix-packages
      ;;
    linux*)
      case $DIST in
        RedHat | Redhat | Debian)
          exenv install $REQUIRED_ELIXIR_VERSION
          exenv rehash
          exenv global $REQUIRED_ELIXIR_VERSION
          get-global-mix-packages
          ;;
        Ubuntu)
          case $REV in
            WSL)
              nix-install elixir-$REQUIRED_ELIXIR_VERSION
              ;;
            *)
              exenv install $REQUIRED_ELIXIR_VERSION
              exenv rehash
              exenv global $REQUIRED_ELIXIR_VERSION
              get-global-mix-packages
              ;;
          esac
          ;;
      esac
      ;;
  esac
}

get-nerves() {
  case $OSTYPE in
    darwin*) ;;
    linux*)
      case $DIST in
        Ubuntu)
          case $REV in
            WSL)
              # prepare fwup
              curl -L https://github.com/martinh/libconfuse/releases/download/v3.0/confuse-3.0.tar.gz | tar -xz -C /tmp
              pushd /tmp/confuse-3.0
              ./configure && make && sudo make install
              popd
              rm -rf /tmp/confuse-3.0
              sudo apt install libarchive-dev libsodium-dev
              ;;
          esac
          # install fwup
          sudo apt install build-essential automake autoconf git squashfs-tools ssh-askpass
          wget https://github.com/fhunleth/fwup/releases/download/v${REQUIRED_FWUP_VERSION}/fwup_${REQUIRED_FWUP_VERSION}_amd64.deb
          sudo dpkg -i fwup_${REQUIRED_FWUP_VERSION}_amd64.deb
          # install nerves
          mix local.hex
          mix local.rebar
          mix archive.install hex nerves_bootstrap
          ;;
      esac
      ;;
  esac
}

get-global-mix-packages() {
  mix local.hex
  mix archive.install https://github.com/phoenixframework/archives/raw/master/phx_new-$REQUIRED_PHOENIXFRAMEWORK_VERSION.ez
}

if ! type -p iex >/dev/null; then get-elixir; fi
