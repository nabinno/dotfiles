#!/usr/bin/env zsh
echo
echo '==========='
echo 'init-screen'
echo '==========='

export REQUIRED_SCREEN_VERSION=4.0.3

get-screen() {
  case $OSTYPE in
    msys)
      pacman -S autoconf ncurses-devel libcrypt-devel
      cd ~
      wget http://ftp.gnu.org/gnu/screen/screen-${REQUIRED_SCREEN_VERSION}.tar.gz
      wget http://ftp.eq.uc.pt/software/pc/prog/cygwin/release/screen/screen-${REQUIRED_SCREEN_VERSION}-1-src.tar.bz2
      tar xvzf screen-${REQUIRED_SCREEN_VERSION}.tar.gz
      tar xvjf screen-${REQUIRED_SCREEN_VERSION}-1-src.tar.bz2
      sed -e 's/__CYGWIN__/__MSYS__/g' screen-${REQUIRED_SCREEN_VERSION}-1.src.patch > screen-${REQUIRED_SCREEN_VERSION}-1.src.patch.msys
      patch -p1 -d . < screen-${REQUIRED_SCREEN_VERSION}-1.cygwin.patch
      patch -p1 -d . < screen-${REQUIRED_SCREEN_VERSION}-1.src.patch.msys
      cd screen-${REQUIRED_SCREEN_VERSION}
      autoconf
      CFLAGS="-DNCURSES_STATIC" ./configure --prefix=/usr/local
      make
      make install
      mkdir -p /var/run
      touch /var/run/utmp
      touch /etc/ttys
      cd ~
      rm -rf screen-${REQUIRED_SCREEN_VERSION}*
  esac
}
if ! type -p screen > /dev/null ; then get-screen ; fi

# ----------------------------------------------------------------------
# ### srcreen for opening ssh ###
ssh_screen() {
  eval server=\${$#}
  screen -t $server ssh "$@"
}

if [ x$TERM = xscreen ] ; then alias ssh=ssh_screen ; fi

# ----------------------------------------------------------------------
# ### screen for status line ###
if [ "$TERM" = "screen" ]; then
  export LSCOLORS=gxfxcxdxbxegedabagacad
  export LS_COLORS='di=36;40:ln=35;40:so=32;40:pi=33;40:ex=31;40:bd=34;46:cd=34;43:su=0;41:sg=0;46:tw=0;42:ow=0;36:'

  # chpwd() {
  #   echo -n "_`dirs`\\" | ll
  # }

  chpwd() {
    echo -n "_`dirs`\\"
  }

  preexec() {
    # see [zsh-workers:13180]
    # http://www.zsh.org/mla/workers/2000/msg03993.html
    emulate -L zsh
    local -a cmd ; cmd=(${(z)2})
    case $cmd[1] in
      fg)
        if (( $#cmd == 1 )) ; then
          cmd=(builtin jobs -l %+)
        else
          cmd=(builtin jobs -l $cmd[2])
        fi
        ;;
      %*) cmd=(builtin jobs -l $cmd[1]) ;;
      cd) if (( $#cmd == 2)) ; then cmd[1]=$cmd[2] ; fi ;;
      *) echo -n "k$cmd[1]:t\\" ; return ;;
    esac
    local -A jt; jt=(${(kv)jobtexts})
    $cmd >>(read num rest
            cmd=(${(z)${(e):-\$jt$num}})
            echo -n "k$cmd[1]:t\\") 2>/dev/null
  }
  chpwd
fi
