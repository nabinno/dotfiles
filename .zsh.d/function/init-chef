#!/usr/bin/env zsh
echo
echo '[init-chef]'
_start_time=$(date +"%s.%3N")

export REQUIRED_CHEF_VERSION=0.17.9

get-chef() {
  case $OSTYPE in
    freebsd* | darwin* | linux*)
      curl https://omnitruck.chef.io/install.sh | sudo bash -s -- -c current -P chefdk -v $REQUIRED_CHEF_VERSION
      ;;
  esac
}

set-chef() {
  case $OSTYPE in
    freebsd* | darwin* | linux*)
      function _chef() {
        local -a _1st_arguments
        _1st_arguments=(
          'exec:Runs the command in context of the embedded ruby'
          'env:Prints environment variables used by ChefDK'
          'gem:Runs the `gem` command in context of the embedded ruby'
          'generate:Generate a new app, cookbook, or component'
          'shell-init:Initialize your shell to use ChefDK as your primary ruby'
          'install:Install cookbooks from a Policyfile and generate a locked cookbook set'
          'update:Updates a Policyfile.lock.json with latest run_list and cookbooks'
          'push:Push a local policy lock to a policy group on the server'
          'push-archive:Push a policy archive to a policy group on the server'
          'show-policy:Show policyfile objects on your Chef Server'
          'diff:Generate an itemized diff of two Policyfile lock documents'
          'provision:Provision VMs and clusters via cookbook'
          'export:Export a policy lock as a Chef Zero code repo'
          'clean-policy-revisions:Delete unused policy revisions on the server'
          'clean-policy-cookbooks:Delete unused policyfile cookbooks on the server'
          'delete-policy-group:Delete a policy group on the server'
          'delete-policy:Delete all revisions of a policy on the server'
          'undelete:Undo a delete command'
          'verify:Test the embedded ChefDK applications'
        )
        _arguments \
          '(-v --version)'{-v,--version}'[version information]' \
          '*:: :->subcmds' && return 0
        if ((CURRENT == 1)); then
          _describe -t commands "chef subcommand" _1st_arguments
          return
        fi
      }
      compdef _chef chef
      ;;
  esac
}

if ! type -p chef >/dev/null; then get-chef; fi
if type -p chef >/dev/null; then set-chef; fi

_end_time=$(date +"%s.%3N")
echo time: $(echo "$_end_time - $_start_time" | bc) sec
