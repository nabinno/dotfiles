#!/usr/bin/env zsh
echo
echo '[init-go]'
_start_time=$(date +"%s.%3N")

export REQUIRED_GO_VERSION=1.14.4
export GOPATH=~/.ghq.d
export GO111MODULE=on

# ### version control ###
get-goenv() {
  case "${OSTYPE}" in
    freebsd* | darwin* | linux*) anyenv install goenv && exec -l zsh ;;
  esac
}

# ----------------------------------------------------------------------
get-go() {
  get-go-by-goenv
}

get-go-by-asdf() {
  case "${OSTYPE}" in
    freebsd* | darwin* | linux*)
      case $(asdf plugin-list) in *golang*) ;; *) asdf plugin-add golang ;; esac
      asdf install golang $REQUIRED_GO_VERSION
      asdf global golang $REQUIRED_GO_VERSION
      ;;
  esac
}

get-go-by-goenv() {
  if ! type -p goenv >/dev/null; then get-goenv; fi
  case "${OSTYPE}" in
    freebsd* | darwin*) ;;
    linux*)
      if ! type -p goenv >/dev/null; then get-goenv; fi
      goenv install $REQUIRED_GO_VERSION
      set-go
      ;;
  esac
}

set-go() {
  case "${OSTYPE}" in
    freebsd* | darwin* | linux*)
      goenv global $REQUIRED_GO_VERSION >/dev/null
      export GOROOT=$(go env GOROOT)
      export PATH="$GOROOT/bin:$PATH"
      ;;
  esac
}

if ! type -p go >/dev/null; then
  get-go
  get-global-go-packages
else
  export GOROOT=$(go env GOROOT)
  export PATH="$GOROOT/bin:$PATH"
fi

# ----------------------------------------------------------------------
get-global-go-packages() {
  case "${OSTYPE}" in
    freebsd* | darwin* | linux*)
      go get -u golang.org/x/tools/cmd/gopls
      go get -u golang.org/x/tools/cmd/goimports
      go get -u golang.org/x/tools/cmd/guru
      go get -u github.com/golang/dep/cmd/dep
      get-mage

      # test
      go get -u github.com/onsi/ginkgo/ginkgo
      go get -u github.com/onsi/gomega

      # debug
      go get -u github.com/go-delve/delve/cmd/dlv
      go get -u github.com/d4l3k/go-pry
      go install -i github.com/d4l3k/go-pry

      # live reload
      GO111MODULE=off go get -u github.com/oxequa/realize

      # utility
      go get -u github.com/Arkweid/lefthook
      go get -u github.com/github/hub
      go get -u github.com/mattn/qq/cmd/qq
      go get -u github.com/mattn/git-fixauthor
      go get -u github.com/shenwei356/csvtk/csvtk
      go get -u github.com/k0kubun/pp
      GO111MODULE=off go get -u github.com/motemen/gore/cmd/gore # REPL
      go get -u github.com/rogpeppe/godef                        # 関数定義等の参照パッケージ
      go get -u github.com/nsf/gocode                            # 補完パッケージ
      go get -u golang.org/x/lint/golint                         # flycheckでシンタックスエラーを検知
      go get -u github.com/kisielk/errcheck                      # flycheckでシンタックスエラーを検知
      ;;
  esac
}

get-mage() {
  go get -u -d github.com/magefile/mage
  (
    cd $GOPATH/src/github.com/magefile/mage
    go run bootstrap.go
  )
}

_end_time=$(date +"%s.%3N")
echo time: $(echo "$_end_time - $_start_time" | bc) sec
